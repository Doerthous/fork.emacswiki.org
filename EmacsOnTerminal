This is a node about running Emacs on so called "dumb terminals".  Well,
they're not that dumb really, because they can do all sorts of things
by themselves, and most people emulate these things on a daily basis.

Most of this applies to unixy systems, like the GnuIsNotUnix, often
erroneously called Linux.  EmacsOnVMS is also a candidate topic here,
and ''maybe'' EmacsForOSTwo, but other systems are not likely to be
accessed via a terminal.

There's a lot of goodies for terminals at http://vt100.net.

The most basic variable on the unix-machines is <code>TERM</code>, and
it gets it's default from the configuration file of mother of all
processes, the ''init''.  This file is usually called "/etc/inittab".
The value of this variable should obviously match the capabilities of
you terminal.  If in doubt, "vt220" covers most of the terminals, and
"vt100" almost all.  Other variables for shells of the sh-family are
COLUMNS and LINES, and these should match your terminals settings too.
I won't get into line-characteristics here, like speed, number of data
and stop bits.

When Emacs starts in a terminal, it tries to load terminal-specific lisp code at "term/${TERM}.el", for example, "term/vt420.el".  These libraries usually set reasonable defaults for keybindings and other aspects of the terminal.

You do want to have hardware flow control, and turn it on from the
terminal itself, and for the ''getty'' process too which is the thing
that initializes the terminal line.  Well, you can use '''stty'''(1)
too, to tweak you serial line.  So you'll probably want to have a
''null-modem cable'', or real modems if you're a bit further away.

Flow control is crucial at speeds above 9600bps.  The software flow control protocol (XON/XOFF) will interfere with Emacs' <code>C-s</code> and <code>C-q</code> events, so you'll want hardware flow control (DTR/DSR or RTS/CTS).  If you must use software flow control, the library ''flow-ctrl'' provides some convenience features, most notably the command <code>enable-flow-control</code> which also remaps these keys.  Other ways to handle use of XON/XOFF include using the unix command <code>stty -ixon</code> or <code>(set-input-mode t nil t)</code> from Emacs.  Either way, no matter what your setting will be, you will miss the command <code>recenter</code> that will re-draw the screen.  By default it's bound to <code>C-l</code>.

=Notes about certain terminals=

==DEC's VT-series of terminals==

Terminals by Digital Equipment Corporation, or <code>|d|i|g|i|t|a|l|</code> are common, and often emulated.  Perhaps the most common terminal mode of all is the ''vt100'', and also ''vt102'' and ''vt220''.  Emacs handles these terminals fairly well, although there is room for improvement.

Make sure you use the "vt200/300/400 mode", 7bit controls, space parity in your terminal communication settings. Do not use the 8bit controls, as they will cause glitches. Don't try to open files containing Unicode characters; no VT terminal supports Unicode.

The VT200-400 series cannot process more than 9600bps (regardless of the serial connection speeds of which they're capable) and have no hardware flow control. The software flow control protocol (XON/XOFF) will wreak havoc with Emacs keybindings, as discussed above, so the best advice for a local connection is to set the terminal to 9600bps or lower.

Note that modern versions of Emacs provide only two compatibility files for DEC terminals, ''vt100'' and ''vt200''. Aliases in the variable <code>term-file-alias</code> are provided by default, including ''vt102'', ''vt125'', ''vt220'', ''vt240'', ''vt300'', ''vt320'', ''vt400'', ''vt420''. However, this is not an exhaustive list of DEC terminal models supported by terminfo. If you are using another DEC terminal, e.g. a ''vt131'', ''vt132'', ''vt330'', or ''vt340'', you will need to add an alias for that to your <code>term-file-alias</code>, otherwise Emacs won't properly recognize your terminal, and you'll encounter all manner of keyboard and display glitches.

Most of the special keys of the VT200-400 series keyboard, the LK201 (and its nearly identical successor the LK401), work by default, though some quirks exist.

* The LK201 lacks an <code>ESC</code> key, but the sequence can be generated with <code>C-3</code> or with <code>C-[</code>. Emacs' ''term/vt200.el'' library also maps the <code>F11</code> key as an <code>ESC</code>.
* The VT200-400 series has no concept of <code>C-_</code>, so for ''undo'' it's recommended to use <code>C-/</code> instead.
* The "Alt Function" key is not an Alt/Meta key.
* The Shift key does not modify the "," and "." keys. Instead, a dedicated key with both "<" and ">" (the latter being shift-activated) is provided immediately to to the right of the left Shift key.

Certain values for the keyboard type from the terminal's menus
(f.ex. "Finnish keyboard") make the <code>S-3</code> produce
section-symbol "ยง", and not the hash-symbol "#" one expects.  The
''compose character'' -key is used to compensate this, by
<code>compose + +</code>.

The terminal's keyboard also has two modes, "typewriting keys" and
"data processing keys".  For instance the former allow the keys left
of RET to be used for scandinavian chars with a finnish keyboard, the
latter enables the curly braces, brackets and others on the same keys.
This is a bit of a nuisance, but again, can be compensated for with
the compose key.

=Success stories=

==tekonivel's DEC VT420==

[[tekonivel]] occasionally uses a DEC VT420 over a ''null-modem
cable'' to a GnuIsNotUnix system, and it works just fine.  Though the
speed is set quite low, to 9600, it's still usable, as Emacs wisely
updates only the parts of screen that have changed.  The VT420 is used
in a mode with 132 columns and 48 rows, page-length also set to 48 to
get fullscreen pages.  The cable is simple, and doesn't provide
hardware flowcontrol.  There's actually none in use, because the speed
is low enough.

Actually the terminal is used in VT220 emulation mode, because the
"vt420" termcap entry doesn't happen to be installed on one of the
machines it's used for.  vt220 mode is the default for the line in
/etc/inittab of the host computer, as well as for the terminal itself.

The Alt key doesn't work at all, which is a bit of a pain in the
neck.
