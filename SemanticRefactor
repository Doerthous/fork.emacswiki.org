[https://github.com/tuhdo/semantic-refactor Semantic Refactor] is a refactoring tool based on the [[Semantic]] parser framework.  It mainly supports C++, but also Lisp formatting.

=C++ features=
This package includes the following features:

- Context-sensitive menu offers appropriate refactoring actions

- Generate class implementation (also handles nested class and class template)

- Generate class getters and setters

- Generate function implementation (also handles function template)

- Generate function prototype

- Convert function to function pointer

- Convert function to function parameter

- Move semantic units (class, function, variable)

- Extract function with proper type information

[https://github.com/tuhdo/semantic-refactor/blob/master/srefactor-demos/demos.org More demos and details about each feature].

=Lisp features=
- reformatting of Lisp code using srefactor-lisp.el
