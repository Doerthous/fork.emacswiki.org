My modification to hippie-expand.

== Expansion like dabbrev-completion (hippie-completion) ==

The following is an approach for obtaining the complete list of possible expansions from hippie-expand, and letting the user select the one they want similar to dabbrev-completion.
It will generate a *Completions* buffer and list all completion. It use Emacs's internal completion interface.


    (defun kk-hippie-expand-completions (&optional hippie-expand-function)
      "Return the full list of possible completions generated by `hippie-expand'.
    The optional argument can be generated with `make-hippie-expand-function'."
      (require 'cl)
      (let ((this-command 'kk-hippie-expand-completions)
            (last-command last-command)
            (buffer-modified (buffer-modified-p))
            (hippie-expand-function (or hippie-expand-function 'hippie-expand)))
        (flet ((ding)) ; avoid the (ding) when hippie-expand exhausts its options.
          (while (progn
                   (funcall hippie-expand-function nil)
                   (setq last-command 'kk-hippie-expand-completions)
                   (not (equal he-num -1)))))
        ;; Evaluating the completions modifies the buffer, however we will finish
        ;; up in the same state that we began.
        (set-buffer-modified-p buffer-modified)
        ;; Provide the options in the order in which they are normally generated.
        (delete he-search-string (reverse he-tried-table))))
    
    
    (defun kk-completion (prompt lst &optional str)
      (let ((str (or str he-search-string)))
      (with-output-to-temp-buffer "*Completions*"
        (display-completion-list (all-completions "" lst) str))))
    
    (defun kk-hippie-completion (&optional hippie-expand-function)
      (interactive)
      (let ((options (kk-hippie-expand-completions hippie-expand-function)))
        (kk-completion "Completion: " options)))
    
    (fset 'kk-hippie-expand-file (make-hippie-expand-function
                                 '(try-complete-file-name-partially
                                   try-complete-file-name)))
    (fset 'kk-hippie-expand-line (make-hippie-expand-function
                                 '(try-expand-line
                                   try-expand-line-all-buffers)))
    
    (global-set-key (kbd "C-c h") 'kk-hippie-completion)
    (global-set-key (kbd "C-c f") (lambda () (interactive) (kk-hippie-completion 'kk-hippie-expand-file)))
    (global-set-key (kbd "M-v") 'switch-to-completions)

use M-v to quickly switch to *Completions* buffer and select.

-- KiteDriver
