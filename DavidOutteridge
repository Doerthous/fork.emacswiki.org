I use Emacs and have done so for close to three decades.  Recent
tasks implemented in Emacs are these.

* Design software to produce arbitrary-sized wood cabinets with
  box-joints and other intricacies.  The Emacs Lisp software does all
  the design based on user-supplied parameters, and produces a script
  for CAD software, which renders the design visually.  This CAD
  software interfaces with a laser cutter to produce the cabinet
  components.

* Numerical integration of the Euler Spiral.  My application is for
  transition curves; but the Emacs Lisp software is general enough
  for other uses.

* Computation, largely based on two dimensional vector arithmetic, to
  produce modular components that assemble into large arbitrary
  structures.  This Emacs Lisp code produces a script for CAD
  software, which renders the design visually, ultimately resulting
  in templates for metal and wood structures.

* On-going support for a few websites.  This is simple text writing
  of .html code that is uploaded to the ISP hosting the websites.

Describing the above tasks is intended to show both my use of Emacs
as a text editor, and my use of Emacs Lisp as an engineering
mathematics computation language.  The seamless embedded computer
language feature of Emacs Lisp I value greatly.

But software used within Emacs itself also has been produced, and
that is what is emphasized and promoted here because it has been so
valuable to its author.  This software was produced initially many
years ago, and has had additions and modifications sporadically, but
the base software has been well tested over the years.  This software
makes Emacs keymaps more visible and user-friendly.  I think it is
useful to those new to Emacs, although that is only speculation since
I am long past being a newcomer.  It has led to personal theses about
one or two aspects of help systems, both in Emacs and more generally.

The software is available via NavigationShell, needs to be
downloaded, and the demonstration Emacs built, which is a simple task
if (another) Emacs is already resident, so that support libraries,
etc. are in place.  Within half-an-hour the tutorial can be
describing and demonstrating things and concepts such as
self-displaying keymaps, reactive and proactive help, keymap editing,
and project keymap creation.

It is hard for me to believe that what the software does is not
interesting, especially to imaginative people.  And it is the ideas
that I wish to promulgate, rather than the software itself.





[new:DrewAdams:2021-10-18 01:12 UTC]
Welcome to the wiki. Ah, yes, Emacs 18...
 -- DrewAdams








----

CategoryHomepage
